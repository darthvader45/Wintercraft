// Date: 11/23/2013 8:13:20 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package wintercraft.render.models;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelPolarBear extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer leg1;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg4;
    ModelRenderer Nose;
    ModelRenderer LeftEar;
    ModelRenderer RightEar;
    protected float field_78145_g = 8.0F;
    protected float field_78151_h = 4.0F;
  
  public ModelPolarBear()
  {
    textureWidth = 128;
    textureHeight = 64;
    
    head = new ModelRenderer(this, 50, 50);
    head.addBox(-3.5F, -4F, -8F, 7, 7, 7);
    head.setRotationPoint(0F, 12F, -6F);
    head.setTextureSize(128, 64);
    head.mirror = true;
    setRotation(head, 0F, 0F, 0F);
    body = new ModelRenderer(this, 0, 32);
    body.addBox(-5F, -10.2F, -7F, 12, 20, 12);
    body.setRotationPoint(-1F, 11F, 3F);
    body.setTextureSize(128, 64);
    body.mirror = true;
    setRotation(body, 1.570796F, 0F, 0F);
    leg1 = new ModelRenderer(this, 54, 0);
    leg1.addBox(-2F, 0F, -2F, 4, 6, 4);
    leg1.setRotationPoint(-3F, 18F, 9F);
    leg1.setTextureSize(128, 64);
    leg1.mirror = true;
    setRotation(leg1, 0F, 0F, 0F);
    leg2 = new ModelRenderer(this, 36, 0);
    leg2.addBox(-2F, 0F, -2F, 4, 6, 4);
    leg2.setRotationPoint(3F, 18F, 10F);
    leg2.setTextureSize(128, 64);
    leg2.mirror = true;
    setRotation(leg2, 0F, 0F, 0F);
    leg3 = new ModelRenderer(this, 18, 0);
    leg3.addBox(-2F, 0F, -2F, 4, 6, 4);
    leg3.setRotationPoint(-3F, 18F, -4F);
    leg3.setTextureSize(128, 64);
    leg3.mirror = true;
    setRotation(leg3, 0F, 0F, 0F);
    leg4 = new ModelRenderer(this, 0, 0);
    leg4.addBox(-2F, 0F, -2F, 4, 6, 4);
    leg4.setRotationPoint(3F, 18F, -4F);
    leg4.setTextureSize(128, 64);
    leg4.mirror = true;
    setRotation(leg4, 0F, 0F, 0F);
    Nose = new ModelRenderer(this, 56, 40);
    Nose.addBox(-2F, -1F, -11F, 4, 4, 3);
    Nose.setRotationPoint(0F, 12F, -6F);
    Nose.setTextureSize(128, 64);
    Nose.mirror = true;
    setRotation(Nose, 0F, 0F, 0F);
    RightEar = new ModelRenderer(this, 37, 25);
    RightEar.addBox(2.5F, -5F, -5F, 2, 2, 2);
    RightEar.setRotationPoint(0F, 12F, -6F);
    RightEar.setTextureSize(128, 64);
    RightEar.mirror = true;
    setRotation(RightEar, 0F, 0F, 0F);
    LeftEar = new ModelRenderer(this, 37, 25);
    LeftEar.addBox(-4.5F, -5F, -5F, 2, 2, 2);
    LeftEar.setRotationPoint(0F, 12F, -6F);
    LeftEar.setTextureSize(128, 64);
    LeftEar.mirror = true;
    setRotation(LeftEar, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    if (this.isChild)
    {
        float f6 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, this.field_78145_g * f5 - 0.2f, this.field_78151_h * f5);
        this.head.render(f5);
        LeftEar.render(f5);
        RightEar.render(f5);
        Nose.render(f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / f6, 1.0F / f6, 1.0F / f6);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        this.body.render(f5);
        this.leg1.render(f5);
        this.leg2.render(f5);
        this.leg3.render(f5);
        this.leg4.render(f5);
        GL11.glPopMatrix();
    }
    else
    {
    head.render(f5);
    body.render(f5);
    Nose.render(f5);
    leg1.render(f5);
    leg2.render(f5);
    leg3.render(f5);
    leg4.render(f5);
    LeftEar.render(f5);
    RightEar.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
	  this.head.rotateAngleX = f5 / (180F / (float)Math.PI);
      this.head.rotateAngleY = f4 / (170F / (float)Math.PI);
	  
	  this.Nose.rotateAngleY = this.head.rotateAngleY;
	  this.Nose.rotateAngleX = this.head.rotateAngleX;
	  
	  this.LeftEar.rotateAngleY = this.head.rotateAngleY;
	  this.LeftEar.rotateAngleX = this.head.rotateAngleX;
	  
	  this.RightEar.rotateAngleY = this.head.rotateAngleY;
	  this.RightEar.rotateAngleX = this.head.rotateAngleX;
	  
	  this.leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5f;
	  this.leg1.rotateAngleY = 0.0f;
	  
	  this.leg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4f * f1;
	  this.leg2.rotateAngleY = 0.0f;
	  
	  this.leg3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5f;
	  this.leg3.rotateAngleZ = 0.0f;
	  
	  this.leg4.rotateAngleX = MathHelper.cos(f * 0.6663F + (float)Math.PI) * 1.4f * f1;
	  this.leg4.rotateAngleZ = 0.0f;
  }

}
