// Date: 12/13/2013 12:53:50 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package wintercraft.render.models;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelReindeer extends ModelBase
{

  //fields
    ModelRenderer muzzle;
    ModelRenderer face;
    ModelRenderer neck;
    ModelRenderer neckback;
    ModelRenderer chest;
    ModelRenderer body;
    ModelRenderer butt;
    ModelRenderer rightbacklegtop;
    ModelRenderer rightbacklegbottom;
    ModelRenderer leftbacklegtop;
    ModelRenderer leftbacklegbottom;
    ModelRenderer rightfrontlegtop;
    ModelRenderer rightfrontlegbottom;
    ModelRenderer leftfrontlegtop;
    ModelRenderer leftfrontlegbottom;
    ModelRenderer fluff1;
    ModelRenderer fluff2;
    ModelRenderer fluff3;
    ModelRenderer fluff4;
    ModelRenderer leftear;
    ModelRenderer rightear;
    ModelRenderer hornbase1;
    ModelRenderer hornbase2;
    ModelRenderer horn;
    ModelRenderer horn1;
    ModelRenderer horn2;
    ModelRenderer horn3;
    ModelRenderer hornlong1;
    ModelRenderer point1;
    ModelRenderer point2;
    ModelRenderer point3;
    ModelRenderer point4;
    ModelRenderer point5;
    ModelRenderer point6;
    ModelRenderer point7;
    ModelRenderer nosebottom;
    ModelRenderer nosetop;
    ModelRenderer hornlong2;
    ModelRenderer point1b;
    ModelRenderer point2b;
    ModelRenderer point3b;
    ModelRenderer point4b;
    ModelRenderer point5b;
    ModelRenderer point6b;
    ModelRenderer point7b;
    ModelRenderer tailfluff;
    ModelRenderer tail;
    protected float field_78145_g = 8.0F;
    protected float field_78151_h = 4.0F;
  
  public ModelReindeer()
  {
	  
    textureWidth = 64;
    textureHeight = 128;
    
      muzzle = new ModelRenderer(this, 37, 22);
      muzzle.addBox(0F, 0F, 0F, 4, 4, 6);
      muzzle.setRotationPoint(-3.5F, -1.4F, -19F);
      muzzle.setTextureSize(64, 128);
      muzzle.mirror = true;
      setRotation(muzzle, 0.2602503F, 0F, 0F);
      face = new ModelRenderer(this, 37, 11);
      face.addBox(0F, 0F, 0F, 6, 5, 5);
      face.setRotationPoint(-4.5F, -3F, -15F);
      face.setTextureSize(64, 128);
      face.mirror = true;
      setRotation(face, 0.2602503F, 0F, 0F);
      neck = new ModelRenderer(this, 0, 71);
      neck.addBox(-4F, -4F, -6F, 5, 10, 5);
      neck.setRotationPoint(0F, 0F, -6F);
      neck.setTextureSize(64, 128);
      neck.mirror = true;
      setRotation(neck, 0.6320364F, 0F, 0F);
      neckback = new ModelRenderer(this, 37, 35);
      neckback.addBox(0F, 0F, 0F, 3, 11, 2);
      neckback.setRotationPoint(-3F, -2.7F, -11.5F);
      neckback.setTextureSize(64, 128);
      neckback.mirror = true;
      setRotation(neckback, 0.8179294F, 0F, 0F);
      chest = new ModelRenderer(this, 0, 38);
      chest.addBox(-6F, -10F, -7F, 9, 8, 9);
      chest.setRotationPoint(0F, 5.5F, 2F);
      chest.setTextureSize(64, 128);
      chest.mirror = true;
      setRotation(chest, 1.570796F, 0F, 0F);
      body = new ModelRenderer(this, -1, 37);
      body.addBox(0F, 0F, 0F, 7, 7, 10);
      body.setRotationPoint(-5F, 5F, -1F);
      body.setTextureSize(64, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      butt = new ModelRenderer(this, 0, 56);
      butt.addBox(0F, 0F, 0F, 8, 8, 6);
      butt.setRotationPoint(-5.5F, 4.5F, 6.5F);
      butt.setTextureSize(64, 128);
      butt.mirror = true;
      setRotation(butt, 0F, 0F, 0F);
      rightbacklegtop = new ModelRenderer(this, 0, 22);
      rightbacklegtop.addBox(-3F, 0F, -2F, 4, 6, 4);
      rightbacklegtop.setRotationPoint(-2.9F, 10F, 10F);
      rightbacklegtop.setTextureSize(64, 128);
      rightbacklegtop.mirror = true;
      setRotation(rightbacklegtop, 0F, 0F, 0F);
      rightbacklegbottom = new ModelRenderer(this, 22, 0);
      rightbacklegbottom.addBox(-2.5F, 6F, -1.5F, 3, 8, 3);
      rightbacklegbottom.setRotationPoint(-2.9F, 10F, 10F);
      rightbacklegbottom.setTextureSize(64, 128);
      rightbacklegbottom.mirror = true;
      setRotation(rightbacklegbottom, 0F, 0F, 0F);
      leftbacklegtop = new ModelRenderer(this, 0, 22);
      leftbacklegtop.addBox(-1F, 0F, -2F, 4, 6, 4);
      leftbacklegtop.setRotationPoint(-0.2F, 10F, 10F);
      leftbacklegtop.setTextureSize(64, 128);
      leftbacklegtop.mirror = true;
      setRotation(leftbacklegtop, 0F, 0F, 0F);
      leftbacklegbottom = new ModelRenderer(this, 22, 0);
      leftbacklegbottom.addBox(-0.5F, 6F, -1.5F, 3, 8, 3);
      leftbacklegbottom.setRotationPoint(-0.2F, 10F, 10F);
      leftbacklegbottom.setTextureSize(64, 128);
      leftbacklegbottom.mirror = true;
      setRotation(leftbacklegbottom, 0F, 0F, 0F);
      rightfrontlegtop = new ModelRenderer(this, 0, 22);
      rightfrontlegtop.addBox(-3F, 0F, -3F, 4, 6, 4);
      rightfrontlegtop.setRotationPoint(-3.2F, 9F, -5.2F);
      rightfrontlegtop.setTextureSize(64, 128);
      rightfrontlegtop.mirror = true;
      setRotation(rightfrontlegtop, 0F, 0F, 0F);
      rightfrontlegbottom = new ModelRenderer(this, 28, 58);
      rightfrontlegbottom.addBox(-2.5F, 6F, -2.5F, 3, 9, 3);
      rightfrontlegbottom.setRotationPoint(-3.2F, 9F, -5.2F);
      rightfrontlegbottom.setTextureSize(64, 128);
      rightfrontlegbottom.mirror = true;
      setRotation(rightfrontlegbottom, 0F, 0F, 0F);
      leftfrontlegtop = new ModelRenderer(this, 0, 22);
      leftfrontlegtop.addBox(-1F, 0F, -3F, 4, 6, 4);
      leftfrontlegtop.setRotationPoint(0.2F, 9F, -5.2F);
      leftfrontlegtop.setTextureSize(64, 128);
      leftfrontlegtop.mirror = true;
      setRotation(leftfrontlegtop, 0F, 0F, 0F);
      leftfrontlegbottom = new ModelRenderer(this, 28, 58);
      leftfrontlegbottom.addBox(-0.5F, 6F, -2.5F, 3, 9, 3);
      leftfrontlegbottom.setRotationPoint(0.2F, 9F, -5.2F);
      leftfrontlegbottom.setTextureSize(64, 128);
      leftfrontlegbottom.mirror = true;
      setRotation(leftfrontlegbottom, 0F, 0F, 0F);
      fluff1 = new ModelRenderer(this, 17, 22);
      fluff1.addBox(0F, 0F, 0F, 6, 8, 2);
      fluff1.setRotationPoint(-4.5F, 4F, -10.8F);
      fluff1.setTextureSize(64, 128);
      fluff1.mirror = true;
      setRotation(fluff1, 0.3839724F, 0F, 0F);
      fluff2 = new ModelRenderer(this, 17, 21);
      fluff2.addBox(0F, 0F, 0F, 3, 5, 6);
      fluff2.setRotationPoint(-1.4F, 4.6F, -10F);
      fluff2.setTextureSize(64, 128);
      fluff2.mirror = true;
      setRotation(fluff2, 0.5934119F, 0.122173F, -0.2792527F);
      fluff3 = new ModelRenderer(this, 18, 24);
      fluff3.addBox(0F, 0F, 0F, 5, 6, 2);
      fluff3.setRotationPoint(-4F, 1.5F, -6.4F);
      fluff3.setTextureSize(64, 128);
      fluff3.mirror = true;
      setRotation(fluff3, 0.715585F, 0F, 0F);
      fluff4 = new ModelRenderer(this, 17, 21);
      fluff4.addBox(0F, 0F, 0F, 3, 5, 6);
      fluff4.setRotationPoint(-4.5F, 3.8F, -10.4F);
      fluff4.setTextureSize(64, 128);
      fluff4.mirror = true;
      setRotation(fluff4, 0.5934119F, -0.122173F, 0.2792527F);
      leftear = new ModelRenderer(this, 27, 13);
      leftear.addBox(0F, 0F, 0F, 1, 4, 2);
      leftear.setRotationPoint(1F, -7F, -10F);
      leftear.setTextureSize(64, 128);
      leftear.mirror = true;
      setRotation(leftear, -0.3839724F, 0.0523599F, 0.1396263F);
      rightear = new ModelRenderer(this, 21, 13);
      rightear.addBox(0F, 0F, 0F, 1, 4, 2);
      rightear.setRotationPoint(-5F, -7F, -10F);
      rightear.setTextureSize(64, 128);
      rightear.mirror = true;
      setRotation(rightear, -0.3839724F, -0.0523599F, -0.1396263F);
      hornbase1 = new ModelRenderer(this, 0, 0);
      hornbase1.addBox(0F, 0F, 0F, 1, 2, 1);
      hornbase1.setRotationPoint(0F, -5F, -13F);
      hornbase1.setTextureSize(64, 128);
      hornbase1.mirror = true;
      setRotation(hornbase1, 0.1570796F, 0F, 0F);
      hornbase2 = new ModelRenderer(this, 0, 0);
      hornbase2.addBox(0F, 0F, 0F, 1, 2, 1);
      hornbase2.setRotationPoint(-4F, -5F, -13F);
      hornbase2.setTextureSize(64, 128);
      hornbase2.mirror = true;
      setRotation(hornbase2, 0.1570796F, 0F, 0F);
      horn = new ModelRenderer(this, 0, 0);
      horn.addBox(0F, 0F, 0F, 1, 1, 3);
      horn.setRotationPoint(0F, -5F, -14F);
      horn.setTextureSize(64, 128);
      horn.mirror = true;
      setRotation(horn, 0.5410521F, 0F, 0F);
      horn1 = new ModelRenderer(this, 0, 0);
      horn1.addBox(0F, 0F, 0F, 1, 1, 3);
      horn1.setRotationPoint(-4F, -5F, -14F);
      horn1.setTextureSize(64, 128);
      horn1.mirror = true;
      setRotation(horn1, 0.5410521F, 0F, 0F);
      horn2 = new ModelRenderer(this, 0, 0);
      horn2.addBox(0F, 0F, 0F, 1, 2, 1);
      horn2.setRotationPoint(0F, -5F, -15.2F);
      horn2.setTextureSize(64, 128);
      horn2.mirror = true;
      setRotation(horn2, 1.134464F, 0F, 0F);
      horn3 = new ModelRenderer(this, 0, 0);
      horn3.addBox(0F, 0F, 0F, 1, 2, 1);
      horn3.setRotationPoint(-4F, -5F, -15.2F);
      horn3.setTextureSize(64, 128);
      horn3.mirror = true;
      setRotation(horn3, 1.134464F, 0F, 0F);
      hornlong1 = new ModelRenderer(this, 0, 0);
      hornlong1.addBox(0F, 0F, 0F, 1, 9, 1);
      hornlong1.setRotationPoint(0F, -12.8F, -5.5F);
      hornlong1.setTextureSize(64, 128);
      hornlong1.mirror = true;
      setRotation(hornlong1, -0.7679449F, 0F, 0F);
      point1 = new ModelRenderer(this, 0, 0);
      point1.addBox(0F, 0F, 0F, 1, 4, 1);
      point1.setRotationPoint(0F, -16.2F, -4.6F);
      point1.setTextureSize(64, 128);
      point1.mirror = true;
      setRotation(point1, -0.2792527F, 0F, 0F);
      point2 = new ModelRenderer(this, 0, 0);
      point2.addBox(0F, 0F, 0F, 1, 4, 1);
      point2.setRotationPoint(0F, -15.5F, -7.3F);
      point2.setTextureSize(64, 128);
      point2.mirror = true;
      setRotation(point2, 0.3490659F, 0F, 0F);
      point3 = new ModelRenderer(this, 0, 0);
      point3.addBox(0F, 0F, 0F, 1, 2, 1);
      point3.setRotationPoint(0F, -14F, -6F);
      point3.setTextureSize(64, 128);
      point3.mirror = true;
      setRotation(point3, -1.919862F, 0F, 0F);
      point4 = new ModelRenderer(this, 0, 0);
      point4.addBox(0F, 0F, 0F, 1, 3, 1);
      point4.setRotationPoint(0F, -12.5F, -9F);
      point4.setTextureSize(64, 128);
      point4.mirror = true;
      setRotation(point4, 0.418879F, 0F, 0F);
      point5 = new ModelRenderer(this, 0, 0);
      point5.addBox(0F, 0F, 0F, 1, 2, 1);
      point5.setRotationPoint(0F, -11F, -9.7F);
      point5.setTextureSize(64, 128);
      point5.mirror = true;
      setRotation(point5, 1.099557F, 0.0174533F, 0F);
      point6 = new ModelRenderer(this, 0, 0);
      point6.addBox(0F, 0F, 0F, 1, 2, 1);
      point6.setRotationPoint(0F, -8F, -12F);
      point6.setTextureSize(64, 128);
      point6.mirror = true;
      setRotation(point6, 0F, 0F, 0F);
      point7 = new ModelRenderer(this, 0, 0);
      point7.addBox(0F, 0F, 0F, 1, 2, 1);
      point7.setRotationPoint(0F, -10F, -10.5F);
      point7.setTextureSize(64, 128);
      point7.mirror = true;
      setRotation(point7, 0.6108652F, 0F, 0F);
      nosebottom = new ModelRenderer(this, 16, 16);
      nosebottom.addBox(0F, 0F, 0F, 1, 2, 1);
      nosebottom.setRotationPoint(-2F, -1.4F, -19.3F);
      nosebottom.setTextureSize(64, 128);
      nosebottom.mirror = true;
      setRotation(nosebottom, 0.296706F, 0F, 0F);
      nosetop = new ModelRenderer(this, 14, 16);
      nosetop.addBox(0F, 0F, 0F, 2, 1, 1);
      nosetop.setRotationPoint(-2.5F, -1.4F, -19.4F);
      nosetop.setTextureSize(64, 128);
      nosetop.mirror = true;
      setRotation(nosetop, 0.296706F, 0F, 0F);
      hornlong2 = new ModelRenderer(this, 0, 0);
      hornlong2.addBox(0F, 0F, 0F, 1, 9, 1);
      hornlong2.setRotationPoint(-4F, -13F, -5.4F);
      hornlong2.setTextureSize(64, 128);
      hornlong2.mirror = true;
      setRotation(hornlong2, -0.7679449F, 0F, 0F);
      point1b = new ModelRenderer(this, 0, 0);
      point1b.addBox(0F, 0F, 0F, 1, 4, 1);
      point1b.setRotationPoint(-4F, -16.3F, -4.6F);
      point1b.setTextureSize(64, 128);
      point1b.mirror = true;
      setRotation(point1b, -0.2792527F, 0F, 0F);
      point2b = new ModelRenderer(this, 0, 0);
      point2b.addBox(0F, 0F, 0F, 1, 2, 1);
      point2b.setRotationPoint(-4F, -8F, -12F);
      point2b.setTextureSize(64, 128);
      point2b.mirror = true;
      setRotation(point2b, 0F, 0F, 0F);
      point3b = new ModelRenderer(this, 0, 0);
      point3b.addBox(0F, 0F, 0F, 1, 2, 1);
      point3b.setRotationPoint(-4F, -10F, -10.5F);
      point3b.setTextureSize(64, 128);
      point3b.mirror = true;
      setRotation(point3b, 0.6108652F, 0F, 0F);
      point4b = new ModelRenderer(this, 0, 0);
      point4b.addBox(0F, 0F, 0F, 1, 3, 1);
      point4b.setRotationPoint(-4F, -12.5F, -9F);
      point4b.setTextureSize(64, 128);
      point4b.mirror = true;
      setRotation(point4b, 0.418879F, 0F, 0F);
      point5b = new ModelRenderer(this, 0, 0);
      point5b.addBox(0F, 0F, 0F, 1, 2, 1);
      point5b.setRotationPoint(-4F, -11F, -9.7F);
      point5b.setTextureSize(64, 128);
      point5b.mirror = true;
      setRotation(point5b, 1.099557F, 0F, 0F);
      point6b = new ModelRenderer(this, 0, 0);
      point6b.addBox(0F, 0F, 0F, 1, 4, 1);
      point6b.setRotationPoint(-4F, -15.5F, -7.3F);
      point6b.setTextureSize(64, 128);
      point6b.mirror = true;
      setRotation(point6b, 0.3490659F, 0F, 0F);
      point7b = new ModelRenderer(this, 0, 0);
      point7b.addBox(0F, 0F, 0F, 1, 2, 1);
      point7b.setRotationPoint(-4F, -14F, -6F);
      point7b.setTextureSize(64, 128);
      point7b.mirror = true;
      setRotation(point7b, -1.919862F, 0F, 0F);
      tailfluff = new ModelRenderer(this, 14, 0);
      tailfluff.addBox(0F, 0F, 0F, 2, 5, 1);
      tailfluff.setRotationPoint(-2.5F, 2F, 14.9F);
      tailfluff.setTextureSize(64, 128);
      tailfluff.mirror = true;
      setRotation(tailfluff, -0.6632251F, 0F, 0F);
      tail = new ModelRenderer(this, 11, 7);
      tail.addBox(0F, 0F, 0F, 3, 5, 1);
      tail.setRotationPoint(-3F, 1F, 14.9F);
      tail.setTextureSize(64, 128);
      tail.mirror = true;
      setRotation(tail, -0.6632251F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    if (this.isChild)
    {
        float f6 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, this.field_78145_g * f5 + 0.3f, this.field_78151_h * f5 + 0.2f);
        face.render(f5);
        muzzle.render(f5);
        nosebottom.render(f5);
        nosetop.render(f5);
        leftear.render(f5);
        rightear.render(f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / f6, 1.0F / f6, 1.0F / f6);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        chest.render(f5);
        body.render(f5);
        butt.render(f5);
        rightbacklegtop.render(f5);
        rightbacklegbottom.render(f5);
        leftbacklegtop.render(f5);
        leftbacklegbottom.render(f5);
        rightfrontlegtop.render(f5);
        rightfrontlegbottom.render(f5);
        leftfrontlegtop.render(f5);
        leftfrontlegbottom.render(f5);
        fluff1.render(f5);
        fluff2.render(f5);
        fluff3.render(f5);
        fluff4.render(f5);
        tailfluff.render(f5);
        tail.render(f5);
        GL11.glPopMatrix();
    }
    else
    {
    	muzzle.render(f5);
        face.render(f5);
        neck.render(f5);
        neckback.render(f5);
        chest.render(f5);
        body.render(f5);
        butt.render(f5);
        rightbacklegtop.render(f5);
        rightbacklegbottom.render(f5);
        leftbacklegtop.render(f5);
        leftbacklegbottom.render(f5);
        rightfrontlegtop.render(f5);
        rightfrontlegbottom.render(f5);
        leftfrontlegtop.render(f5);
        leftfrontlegbottom.render(f5);
        fluff1.render(f5);
        fluff2.render(f5);
        fluff3.render(f5);
        fluff4.render(f5);
        leftear.render(f5);
        rightear.render(f5);
        hornbase1.render(f5);
        hornbase2.render(f5);
        horn.render(f5);
        horn1.render(f5);
        horn2.render(f5);
        horn3.render(f5);
        hornlong1.render(f5);
        point1.render(f5);
        point2.render(f5);
        point3.render(f5);
        point4.render(f5);
        point5.render(f5);
        point6.render(f5);
        point7.render(f5);
        nosebottom.render(f5);
        nosetop.render(f5);
        hornlong2.render(f5);
        point1b.render(f5);
        point2b.render(f5);
        point3b.render(f5);
        point4b.render(f5);
        point5b.render(f5);
        point6b.render(f5);
        point7b.render(f5);
        tailfluff.render(f5);
        tail.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
	  this.leftfrontlegtop.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5f;
	  this.leftfrontlegtop.rotateAngleY = 0.0f;
	  
	  this.leftfrontlegbottom.rotateAngleX = this.leftfrontlegtop.rotateAngleX;
	  this.leftfrontlegbottom.rotateAngleY = this.leftfrontlegtop.rotateAngleY;
	  
	  this.rightfrontlegtop.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4f * f1;
	  this.rightfrontlegtop.rotateAngleY = 0.0f;
	  
	  this.rightfrontlegbottom.rotateAngleX = this.rightfrontlegtop.rotateAngleX;
	  this.rightfrontlegbottom.rotateAngleY = this.rightfrontlegtop.rotateAngleY;
	  
	  this.leftbacklegtop.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5f;
	  this.leftbacklegtop.rotateAngleY = 0.0f;
	  
	  this.leftbacklegbottom.rotateAngleX = this.leftbacklegtop.rotateAngleX;
	  this.leftbacklegbottom.rotateAngleY = this.leftbacklegtop.rotateAngleY;
	  
	  this.rightbacklegtop.rotateAngleX = MathHelper.cos(f * 0.6663F + (float)Math.PI) * 1.4f * f1;
	  this.rightbacklegtop.rotateAngleY = 0.0f;
	  
	  this.rightbacklegbottom.rotateAngleX = this.rightbacklegtop.rotateAngleX;
	  this.rightbacklegbottom.rotateAngleY = this.rightbacklegtop.rotateAngleY;
  }

}
